name: >-
  pr-default_env_860207ab-32d0-4ad2-8b78-e569ac242760_app_d42bb57b-ef7e-48b4-addb-f7600888bb4a
  Pipeline (Skyu Generated)
'on':
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch: {}
  repository_dispatch:
    types: pipeline_f501aafb-d76b-4f5a-8439-2bce58da911d
env:
  ENCODED_PIPELINE_SECRET: >-
    ${{secrets.TESTSERVICE2_ENV_860207AB32D04AD28B78E569AC242760_APP_D42BB57BEF7E48B4ADDBF7600888BB4A_PRDEFAULT_ENV_860207AB32D04AD28B78E569AC242760_APP_D42BB57BEF7E48B4ADDBF7600888BB4A}}
  IMAGE_NAME: skyu-gen-img
  IMAGE_TAG: ${{github.event.client_payload.commitId || github.sha}}
  DOCKER_FILE_PATH: Dockerfile
  DOCKER_BUILD_CONTEXT: .
  SCAN_SEVERITY: HIGH
  TRIVY_SCAN_EXIT_CODE: '0'
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Start
        run: >-
          echo " Starting GitHub Action!" && echo "IMAGE_EXISTS_IN_ECR=false" >>
          $GITHUB_ENV
      - name: 'Run :: Checkout repository'
        uses: actions/checkout@v2
      - name: 'Run :: Checkout Specific Commit'
        if: ${{ github.event.client_payload.commitId != null }}
        run: git checkout ${{ github.event.client_payload.commitId }}
      - name: 'Run :: Decoding Secrets'
        run: >-
          echo "${{ env.ENCODED_PIPELINE_SECRET }}" | base64 --decode | jq -r
          'to_entries[] | "\(.key)=\(.value)"' | while read line; do echo
          "$line" >> $GITHUB_ENV; echo "::add-mask::${line#*=}"; done
      - name: 'Run :: Build With Docker'
        run: >-
          docker build -t ${{ env.registryURL }}/${{env.REPOSITORY_NAME}}:${{
          env.IMAGE_TAG }} -f ${{env.DOCKER_FILE_PATH}}
          ${{env.DOCKER_BUILD_CONTEXT}}
        if: ${{ env.IMAGE_EXISTS_IN_ECR == 'false' }}
      - name: 'Run :: Trivy vulnerability scanner'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.registryURL }}/${{env.REPOSITORY_NAME}}:${{ env.IMAGE_TAG }}
          format: table
          output: trivy-results.json
          exit-code: ${{env.TRIVY_SCAN_EXIT_CODE}}
          ignore-unfixed: true
          vuln-type: os,library
          severity: ${{env.SCAN_SEVERITY}}
        if: ${{ env.IMAGE_EXISTS_IN_ECR == 'false' }}
      - name: 'Run :: Comment on PR with Trivy Summary'
        uses: actions/github-script@v6
        with:
          script: |2-

                  const fs = require('fs');
                  const trivySummary = fs.readFileSync('trivy-results.json', 'utf-8');

                  github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: 'Trivy ${{env.SCAN_SEVERITY}} Vulnerability Scan Results\n```\n' + trivySummary + '\n```',
                  });
                  
