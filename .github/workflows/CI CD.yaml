name: My Test Workflow (Skyu Generated)
'on':
  push:
    branches:
      - master
  workflow_dispatch: {}
env:
  IMAGE_NAME: ${{secrets.DOCKER_IMAGE_NAME}}
  DOCKER_FILE_NAME: Dockerfile
  RANDOM_ENV_VALUE: HAHAHAHAHA
  TEST_ENV_WITH_SECRET_VAL: ${{secrets.DOCKER_IMAGE_NAME}}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Start
        run: echo " Starting GitHub Action!"
      - name: 'Run :: Checkout repository'
        uses: actions/checkout@v2
      - name: 'Run :: Build With Docker'
        run: >-
          docker images && docker build -t ${{ env.IMAGE_NAME }} -f
          ${{env.DOCKER_FILE_NAME}} .${{env.DOCKER_FILE_PATH}} && docker images
      - name: 'Run :: Decoding Secrets'
        id: skyu_parse_secrets
        run: >-
          MY_SECRET_BASE64=${{ env.MY_SECRET }} && MY_SECRET_JSON=$(echo
          $MY_SECRET_BASE64 | base64 --decode) && echo Decoded JSON:
          $MY_SECRET_JSON && echo ::set-output
          name=MY_SECRET_JSON::$MY_SECRET_JSON
      - name: 'Run :: Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.UUID.AWS_ASSUME_ROLE }}
          role-session-name: skyu-pipeline-assume-role-session
          aws-region: ap-south-1
      - name: 'Run :: Login to Amazon ECR'
        id: skyu-aws-login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: 'Run :: Create Repository'
        run: >-
          aws ecr create-repository --repository-name ${{ env.IMAGE_NAME }} ||
          true
      - name: 'Run :: Build, tag, and push image to Amazon ECR'
        id: skyu-aws-login-ecr
        run: >-
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{
          env.IMAGE_NAME }} . && docker push ${{
          steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}
      - name: My Custom Step
        run: >-
          echo " Pipeline service works yall!.
          $\{\{secrets.DOCKER_IMAGE_NAME\}\} and $\{\{env.RANDOM_ENV_VALUE\}\}"
